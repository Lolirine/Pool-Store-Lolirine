name: Deploy to OVH VPS
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Charge la clé privée proprement
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Preflight
        run: |
          test -n "${{ secrets.VPS_HOST }}" || (echo "VPS_HOST manquant" && exit 1)
          test -n "${{ secrets.VPS_USER }}" || (echo "VPS_USER manquant" && exit 1)
          # Vérifie que la clé ressemble à une OpenSSH
          echo "${{ secrets.VPS_SSH_KEY }}" | head -1 | grep -q 'BEGIN OPENSSH PRIVATE KEY' || (echo "Clé privée mal formée" && exit 1)

      - name: SSH deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          APP_PORT: ${{ secrets.APP_PORT }}
          REPO: git@github.com:lolirine/Pool-store-Lolirine.git
        run: |
          set -euo pipefail
          APP_PORT="${APP_PORT:-3000}"
          SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

          ssh $SSH_OPTS ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} bash -s <<'EOS'
          set -euo pipefail
          APP_PORT="${APP_PORT:-3000}"

          # Docker
          if ! command -v docker >/dev/null; then
            curl -fsSL https://get.docker.com | sh
            sudo systemctl enable --now docker
          fi
          command -v docker compose >/dev/null || { sudo apt-get update && sudo apt-get install -y docker-compose-plugin; }

          # Code
          mkdir -p ~/apps && cd ~/apps
          if [ ! -d "Pool-store-Lolirine/.git" ]; then
            git clone --depth=1 "$REPO" Pool-store-Lolirine
          fi
          cd Pool-store-Lolirine
          git fetch --depth=1 origin main
          git checkout main
          git reset --hard origin/main

          # .env
          cd lolirinepool
          printf 'DATABASE_URL=%s\nPORT=%s\n' "$DATABASE_URL" "$APP_PORT" > .env

          # Rebuild + redeploy
          docker compose down || true
          docker compose build --pull --no-cache --build-arg GIT_SHA=${GITHUB_SHA:-manual}
          docker compose up -d --force-recreate --remove-orphans
          EOS
        shell: bash
